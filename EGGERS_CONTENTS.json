{"home":{"content":"# Terminal, Git, and GitHub\n---\n\nWelcome to lecture 6! Here's a brief class breakdown.\n\n#### Learning Objectives\n---\n\n1. Practice terminal commands\n2. Learn command line git\n\n#### To Do Today\n---\n\n* #### [Warmup](#warmup)\n* #### [Terminal Git](#terminal-git)\n* #### [SSH Git](#ssh-git)\n* #### [Exercises](#exercises)\n\n#### Installations\n---\n\n* #### [NodeJS for Mac](http://blog.teamtreehouse.com/install-node-js-npm-mac)\n* #### [NodeJS for PC](http://blog.teamtreehouse.com/install-node-js-npm-windows)\n* #### [Terminal Tutor](https://github.com/mottaquikarim/TerminalTutor)\n* #### [Git Tutor](https://github.com/mottaquikarim/GitTutor)\n","idx":0},"title":{"content":"Terminal, Git, and GitHub","idx":1},"desc":{"content":"Terminal review, intro to git in cmd line","idx":2},"warmup":{"content":"# Warmup\n---\n\nLet's begin with some simple exercises.\n\n[**NOTE**]: Talk about **Terminal Tutor** and **Git Tutor**.\n\n---\n\nSolve as many of the following problems as you can.\n#### [Terminal Exercises](https://github.com/FEWDMaterials/terminal-exercises)","idx":3},"terminal-git":{"content":"# Terminal Git\n---\n\nLet's talk about how we could use git via terminal.\n\n#### Step 0: Setting up a folder\n---\n\n* Create a folder\n* Add some content to it\n* ``cd`` into that folder.\n\n#### Step 1: Init\n---\n\nAssuming you are in the correct folder in terminal...\n\nFirst, we must initialize **git** and tell it to watch the files in this folder.\n\n```bash\n$ git init\n```\n\n#### Step 2: Add\n---\n\nWe have to tell git **which files** we want it to track.\n\n```bash\n$ git add .\n```\n\n^^^ the **.** says add **all** files to be tracked.\n\n#### Step 3: Commit\n---\n\nThis is us actually creating the checkpoint.\n\nEquivalent to use dragging over files into browser and clicking the commit button.\n\n```bash\n$ git commit -m \"commit message\"\n```\n\n#### Step 4: Push\n---\n\nFinally, all of the updates we have made thus far only live in the computer. In order to truly save this data, we must push to a remote server.\n\n```bash\n$ git push -u origin master\n```\n\nThis begs the question...where do we push to?!\n\nPerhaps this question isn't too difficult to answer - we may want to push to **GitHub**...but how? This is where **[SSH Git](#ssh-git)** comes into play.\n","idx":4},"ssh-git":{"content":"# SSH Git\n---\n\nSSH, or secure shell, makes it easier to push to GitHub from your machine.\n\nSSH is basically another way of authenticating yourself to GitHub without having to provide your password all the time. It uses a technique called **[public key cryptography](https://www.quora.com/How-does-public-key-cryptography-work)**.\n\nWe will set up our public/private keys for GitHub usage.\n\n#### Quick Setup\n---\n\n**[Similar to GitHub's docs](https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/)**\n\n**Step 1:**\n\n* If you get anything back that ends in `.pub`, you might have ssh keys!\n\n```bash\n$ cd ~/.ssh\n$ ls\n```\n\n**Step 2:**\n\n```bash\n$ ssh-keygen -t rsa -C \"youremail@example.com\"\n# Enter file in which to save the key (/Users/username/.ssh/id_rsa): [Press enter]\n# Enter passphrase (empty for no passphrase): [Type a passphrase]\n# Enter same passphrase again: [Type passphrase again]\n```\n\n**Step 3:**\n\n```bash\n# start the ssh-agent in the background\n$ eval \"$(ssh-agent -s)\"\n# Agent pid 34234\n# Add your key\n$ ssh-add ~/.ssh/id_rsa\n```\n\n**Step 4:**\n\n* Windows/Git Bash users can use ```cat ~/.ssh/id_rsa.pub``` and copy the results)\n\n```bash\n$ pbcopy < ~/.ssh/id_rsa.pub\n```\n\n**Step 5:**\n\n**[Follow steps here to add to your GitHub Account](https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/)**\n\n#### Let's push to Github\n---\n\n**Step 1:**\n\nCreate an empty folder and put your usual **styles** folder, **main.css**, **index.html** and HTML basic code.\n\n**Step 2:**\n\nFrom the **[Terminal git](#terminal-git)** lesson, create a local git repo and make your first commit. \n\n**Step 3:**\n\n**We now have the knowledge to make step 4 from the previous lesson a reality!**\n\nCreate a new repo **in GitHub**. Then, \n\n```bash\n$ git remote add origin https://github.com/[yourUserName]/[nameOfYourRepo].git\n```\n\nAnd finally,\n\n```bash\n$ git push -u origin master\n```","idx":5},"exercises":{"content":"# Exercises\n---\n\n* #### [Exercises](https://github.com/FEWDMaterials/github-cdm-exercises)","idx":6},"__list__":["home","title","desc","warmup","terminal-git","ssh-git","exercises"]}